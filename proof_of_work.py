# Proof Of Work
# Результат вычисления назовем "Доказательством работы", а
# процесс вычисления - "Майнингом"

# Искусственно усложняется хещ-функция, так чтобы максимально
# затруднить подбор хеша (поиск коллизий)

# Данная концепция, говорит о том, что теперь чтобы подсчитать
# хеш, мы должны будем выполнить долгое и сложное вычисление
# (работу), затратив вычислительные ресурсы.


from hash import data_to_hash


# к примеру все хеши должны начинаться с "x"
# чем сложнее "x" тем сложнее майнинг
x = '00'

def is_valid_proof(block, proof):
  # проверка proof числа в качестве доказательства работы

  block_copy = block.copy()
  block_copy['proof'] = proof

  # считаем новый хеш
  hash = data_to_hash(block_copy)
  # начинается ли хеш с переменной - x
  is_valid_hash = hash[0:2] == x
  return is_valid_hash


def mine_proof_of_work(block):
  # майнит proof-число, такое чтобы добавив его к блоку
  # хеш начинался с переменной - x
  proof = 0
  while not is_valid_proof(block, proof):
    proof += 1
  return proof


# вместо обычной функции хеширования (data_to_hash),
# надо использовать функцию майнинга (mine_proof_of_work),
# тогда все хеши будут начинаться c переменной - x
# это и будет доказательством работы
